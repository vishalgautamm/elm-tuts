var _Bogdanp$elm_time$Time_Date$clampDay = function (day) {
	return A3(_elm_lang$core$Basics$clamp, 1, 31, day);
};
var _Bogdanp$elm_time$Time_Date$clampMonth = function (month) {
	return A3(_elm_lang$core$Basics$clamp, 1, 12, month);
};
var _Bogdanp$elm_time$Time_Date$daysFromYear = function (y) {
	return (_elm_lang$core$Native_Utils.cmp(y, 0) > 0) ? ((((366 + ((y - 1) * 365)) + (((y - 1) / 4) | 0)) - (((y - 1) / 100) | 0)) + (((y - 1) / 400) | 0)) : ((_elm_lang$core$Native_Utils.cmp(y, 0) < 0) ? ((((y * 365) + ((y / 4) | 0)) - ((y / 100) | 0)) + ((y / 400) | 0)) : 0);
};
var _Bogdanp$elm_time$Time_Date$yearFromDays = function (ds) {
	var y = (ds / 365) | 0;
	var d = _Bogdanp$elm_time$Time_Date$daysFromYear(y);
	return (_elm_lang$core$Native_Utils.cmp(ds, d) < 1) ? (y - 1) : y;
};
var _Bogdanp$elm_time$Time_Date$isLeapYear = function (y) {
	return _elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], y, 400),
		0) || ((!_elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], y, 100),
		0)) && _elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], y, 4),
		0));
};
var _Bogdanp$elm_time$Time_Date$unsafeDaysInMonth = F2(
	function (y, m) {
		return _elm_lang$core$Native_Utils.eq(m, 1) ? 31 : ((_elm_lang$core$Native_Utils.eq(m, 2) && _Bogdanp$elm_time$Time_Date$isLeapYear(y)) ? 29 : (_elm_lang$core$Native_Utils.eq(m, 2) ? 28 : (_elm_lang$core$Native_Utils.eq(m, 3) ? 31 : (_elm_lang$core$Native_Utils.eq(m, 4) ? 30 : (_elm_lang$core$Native_Utils.eq(m, 5) ? 31 : (_elm_lang$core$Native_Utils.eq(m, 6) ? 30 : (_elm_lang$core$Native_Utils.eq(m, 7) ? 31 : (_elm_lang$core$Native_Utils.eq(m, 8) ? 31 : (_elm_lang$core$Native_Utils.eq(m, 9) ? 30 : (_elm_lang$core$Native_Utils.eq(m, 10) ? 31 : (_elm_lang$core$Native_Utils.eq(m, 11) ? 30 : (_elm_lang$core$Native_Utils.eq(m, 12) ? 31 : _elm_lang$core$Native_Utils.crash(
			'Time.Date',
			{
				start: {line: 343, column: 9},
				end: {line: 343, column: 20}
			})(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'invalid call to unsafeDaysInMonth: year=',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(y),
					A2(
						_elm_lang$core$Basics_ops['++'],
						' month=',
						_elm_lang$core$Basics$toString(m)))))))))))))))));
	});
var _Bogdanp$elm_time$Time_Date$daysInMonth = F2(
	function (y, m) {
		return ((_elm_lang$core$Native_Utils.cmp(m, 1) > -1) && (_elm_lang$core$Native_Utils.cmp(m, 12) < 1)) ? _elm_lang$core$Maybe$Just(
			A2(_Bogdanp$elm_time$Time_Date$unsafeDaysInMonth, y, m)) : _elm_lang$core$Maybe$Nothing;
	});
var _Bogdanp$elm_time$Time_Date$daysFromYearMonth = F2(
	function (year, month) {
		var go = F3(
			function (year, month, acc) {
				go:
				while (true) {
					if (_elm_lang$core$Native_Utils.eq(month, 0)) {
						return acc;
					} else {
						var _v0 = year,
							_v1 = month - 1,
							_v2 = acc + A2(_Bogdanp$elm_time$Time_Date$unsafeDaysInMonth, year, month);
						year = _v0;
						month = _v1;
						acc = _v2;
						continue go;
					}
				}
			});
		return A3(go, year, month - 1, 0);
	});
var _Bogdanp$elm_time$Time_Date$daysFromYearMonthDay = F3(
	function (year, month, day) {
		var dds = day - 1;
		var mds = A2(_Bogdanp$elm_time$Time_Date$daysFromYearMonth, year, month);
		var yds = _Bogdanp$elm_time$Time_Date$daysFromYear(year);
		return (yds + mds) + dds;
	});
var _Bogdanp$elm_time$Time_Date$isValidDate = F3(
	function (year, month, day) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			false,
			A2(
				_elm_lang$core$Maybe$map,
				function (days) {
					return (_elm_lang$core$Native_Utils.cmp(day, 1) > -1) && (_elm_lang$core$Native_Utils.cmp(day, days) < 1);
				},
				A2(_Bogdanp$elm_time$Time_Date$daysInMonth, year, month)));
	});
var _Bogdanp$elm_time$Time_Date$toTuple = function (_p0) {
	var _p1 = _p0;
	return {ctor: '_Tuple3', _0: _p1._0.year, _1: _p1._0.month, _2: _p1._0.day};
};
var _Bogdanp$elm_time$Time_Date$delta = F2(
	function (_p3, _p2) {
		var _p4 = _p3;
		var _p7 = _p4._0;
		var _p5 = _p2;
		var _p6 = _p5._0;
		return {
			years: _p7.year - _p6.year,
			months: ((_elm_lang$core$Basics$abs(_p7.year) * 12) + _p7.month) - ((_elm_lang$core$Basics$abs(_p6.year) * 12) + _p6.month),
			days: A3(_Bogdanp$elm_time$Time_Date$daysFromYearMonthDay, _p7.year, _p7.month, _p7.day) - A3(_Bogdanp$elm_time$Time_Date$daysFromYearMonthDay, _p6.year, _p6.month, _p6.day)
		};
	});
var _Bogdanp$elm_time$Time_Date$compare = F2(
	function (d1, d2) {
		return A2(
			_elm_lang$core$Basics$compare,
			_Bogdanp$elm_time$Time_Date$toTuple(d1),
			_Bogdanp$elm_time$Time_Date$toTuple(d2));
	});
var _Bogdanp$elm_time$Time_Date$day = function (_p8) {
	var _p9 = _p8;
	return _p9._0.day;
};
var _Bogdanp$elm_time$Time_Date$month = function (_p10) {
	var _p11 = _p10;
	return _p11._0.month;
};
var _Bogdanp$elm_time$Time_Date$year = function (_p12) {
	var _p13 = _p12;
	return _p13._0.year;
};
var _Bogdanp$elm_time$Time_Date$toISO8601 = function (d) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_elm_lang$core$Basics$toString(
			_Bogdanp$elm_time$Time_Date$year(d)),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'-',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_Bogdanp$elm_time$Time_Internal$padded(
					_Bogdanp$elm_time$Time_Date$month(d)),
				A2(
					_elm_lang$core$Basics_ops['++'],
					'-',
					_Bogdanp$elm_time$Time_Internal$padded(
						_Bogdanp$elm_time$Time_Date$day(d))))));
};
var _Bogdanp$elm_time$Time_Date$DateDelta = F3(
	function (a, b, c) {
		return {years: a, months: b, days: c};
	});
var _Bogdanp$elm_time$Time_Date$Date = function (a) {
	return {ctor: 'Date', _0: a};
};
var _Bogdanp$elm_time$Time_Date$firstValid = F3(
	function (year, month, day) {
		var _p14 = A3(_Bogdanp$elm_time$Time_Date$isValidDate, year, month, day) ? {ctor: '_Tuple3', _0: year, _1: month, _2: day} : (A3(_Bogdanp$elm_time$Time_Date$isValidDate, year, month, day - 1) ? {ctor: '_Tuple3', _0: year, _1: month, _2: day - 1} : (A3(_Bogdanp$elm_time$Time_Date$isValidDate, year, month, day - 2) ? {ctor: '_Tuple3', _0: year, _1: month, _2: day - 2} : {ctor: '_Tuple3', _0: year, _1: month, _2: day - 3}));
		var y = _p14._0;
		var m = _p14._1;
		var d = _p14._2;
		return _Bogdanp$elm_time$Time_Date$Date(
			{year: y, month: m, day: d});
	});
var _Bogdanp$elm_time$Time_Date$date = F3(
	function (year, month, day) {
		return A3(
			_Bogdanp$elm_time$Time_Date$firstValid,
			year,
			_Bogdanp$elm_time$Time_Date$clampMonth(month),
			_Bogdanp$elm_time$Time_Date$clampDay(day));
	});
var _Bogdanp$elm_time$Time_Date$fromTuple = function (_p15) {
	var _p16 = _p15;
	return A3(_Bogdanp$elm_time$Time_Date$date, _p16._0, _p16._1, _p16._2);
};
var _Bogdanp$elm_time$Time_Date$fromISO8601 = function (input) {
	var convert = function (_p17) {
		var _p18 = _p17;
		var _p21 = _p18._0;
		var _p20 = _p18._1;
		var _p19 = _p18._2;
		return A3(_Bogdanp$elm_time$Time_Date$isValidDate, _p21, _p20, _p19) ? _Bogdanp$elm_combine$Combine$succeed(
			A3(_Bogdanp$elm_time$Time_Date$date, _p21, _p20, _p19)) : _Bogdanp$elm_combine$Combine$fail('invalid date');
	};
	var dateTuple = A2(
		_Bogdanp$elm_combine$Combine_ops['<*>'],
		A2(
			_Bogdanp$elm_combine$Combine_ops['<*>'],
			A2(
				_Bogdanp$elm_combine$Combine_ops['<$>'],
				F3(
					function (v0, v1, v2) {
						return {ctor: '_Tuple3', _0: v0, _1: v1, _2: v2};
					}),
				_Bogdanp$elm_combine$Combine_Num$int),
			A2(
				_Bogdanp$elm_combine$Combine_ops['*>'],
				_Bogdanp$elm_combine$Combine$string('-'),
				A2(_Bogdanp$elm_time$Time_Internal$intRange, 1, 12))),
		A2(
			_Bogdanp$elm_combine$Combine_ops['*>'],
			_Bogdanp$elm_combine$Combine$string('-'),
			A2(_Bogdanp$elm_time$Time_Internal$intRange, 1, 31)));
	var _p22 = A2(
		_Bogdanp$elm_combine$Combine$parse,
		A2(_Bogdanp$elm_combine$Combine_ops['>>='], dateTuple, convert),
		input);
	if (_p22.ctor === 'Ok') {
		return _elm_lang$core$Result$Ok(_p22._0._2);
	} else {
		var messages = A2(_elm_lang$core$String$join, ' or ', _p22._0._2);
		return _elm_lang$core$Result$Err(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'Errors encountered at position ',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(_p22._0._1.position),
					A2(_elm_lang$core$Basics_ops['++'], ': ', messages))));
	}
};
var _Bogdanp$elm_time$Time_Date$setYear = F2(
	function (year, _p23) {
		var _p24 = _p23;
		return A3(_Bogdanp$elm_time$Time_Date$firstValid, year, _p24._0.month, _p24._0.day);
	});
var _Bogdanp$elm_time$Time_Date$setMonth = F2(
	function (month, _p25) {
		var _p26 = _p25;
		return A3(
			_Bogdanp$elm_time$Time_Date$firstValid,
			_p26._0.year,
			_Bogdanp$elm_time$Time_Date$clampMonth(month),
			_p26._0.day);
	});
var _Bogdanp$elm_time$Time_Date$setDay = F2(
	function (day, _p27) {
		var _p28 = _p27;
		return A3(
			_Bogdanp$elm_time$Time_Date$firstValid,
			_p28._0.year,
			_p28._0.month,
			_Bogdanp$elm_time$Time_Date$clampDay(day));
	});
var _Bogdanp$elm_time$Time_Date$addYears = F2(
	function (years, _p29) {
		var _p30 = _p29;
		return A3(_Bogdanp$elm_time$Time_Date$firstValid, _p30._0.year + years, _p30._0.month, _p30._0.day);
	});
var _Bogdanp$elm_time$Time_Date$addMonths = F2(
	function (months, _p31) {
		var _p32 = _p31;
		var _p33 = _p32._0.year;
		var ms = (((_elm_lang$core$Basics$abs(_p33) * 12) + _p32._0.month) - 1) + months;
		var sign = (_elm_lang$core$Native_Utils.cmp(_p33, 0) < 0) ? -1 : 1;
		return A3(
			_Bogdanp$elm_time$Time_Date$firstValid,
			((sign * ms) / 12) | 0,
			A2(_elm_lang$core$Basics_ops['%'], ms, 12) + 1,
			_p32._0.day);
	});
var _Bogdanp$elm_time$Time_Date$dateFromDays = function (ds) {
	var d400 = _Bogdanp$elm_time$Time_Date$daysFromYear(400);
	var y400 = (ds / d400) | 0;
	var d = A2(_elm_lang$core$Basics$rem, ds, d400);
	var year = _Bogdanp$elm_time$Time_Date$yearFromDays(d + 1);
	var leap = _Bogdanp$elm_time$Time_Date$isLeapYear(year) ? F2(
		function (x, y) {
			return x + y;
		})(1) : _elm_lang$core$Basics$identity;
	var doy = d - _Bogdanp$elm_time$Time_Date$daysFromYear(year);
	var _p34 = (_elm_lang$core$Native_Utils.cmp(doy, 31) < 0) ? {ctor: '_Tuple2', _0: 1, _1: doy + 1} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(59)) < 0) ? {ctor: '_Tuple2', _0: 2, _1: (doy - 31) + 1} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(90)) < 0) ? {
		ctor: '_Tuple2',
		_0: 3,
		_1: (doy - leap(59)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(120)) < 0) ? {
		ctor: '_Tuple2',
		_0: 4,
		_1: (doy - leap(90)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(151)) < 0) ? {
		ctor: '_Tuple2',
		_0: 5,
		_1: (doy - leap(120)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(181)) < 0) ? {
		ctor: '_Tuple2',
		_0: 6,
		_1: (doy - leap(151)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(212)) < 0) ? {
		ctor: '_Tuple2',
		_0: 7,
		_1: (doy - leap(181)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(243)) < 0) ? {
		ctor: '_Tuple2',
		_0: 8,
		_1: (doy - leap(212)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(273)) < 0) ? {
		ctor: '_Tuple2',
		_0: 9,
		_1: (doy - leap(243)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(304)) < 0) ? {
		ctor: '_Tuple2',
		_0: 10,
		_1: (doy - leap(273)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(334)) < 0) ? {
		ctor: '_Tuple2',
		_0: 11,
		_1: (doy - leap(304)) + 1
	} : {
		ctor: '_Tuple2',
		_0: 12,
		_1: (doy - leap(334)) + 1
	}))))))))));
	var month = _p34._0;
	var day = _p34._1;
	return _Bogdanp$elm_time$Time_Date$Date(
		{year: year + (y400 * 400), month: month, day: day});
};
var _Bogdanp$elm_time$Time_Date$addDays = F2(
	function (days, _p35) {
		var _p36 = _p35;
		return _Bogdanp$elm_time$Time_Date$dateFromDays(
			A2(
				F2(
					function (x, y) {
						return x + y;
					}),
				days,
				A3(_Bogdanp$elm_time$Time_Date$daysFromYearMonthDay, _p36._0.year, _p36._0.month, _p36._0.day)));
	});
var _Bogdanp$elm_time$Time_Date$Sun = {ctor: 'Sun'};
var _Bogdanp$elm_time$Time_Date$Sat = {ctor: 'Sat'};
var _Bogdanp$elm_time$Time_Date$Fri = {ctor: 'Fri'};
var _Bogdanp$elm_time$Time_Date$Thu = {ctor: 'Thu'};
var _Bogdanp$elm_time$Time_Date$Wed = {ctor: 'Wed'};
var _Bogdanp$elm_time$Time_Date$Tue = {ctor: 'Tue'};
var _Bogdanp$elm_time$Time_Date$Mon = {ctor: 'Mon'};
var _Bogdanp$elm_time$Time_Date$weekday = function (_p37) {
	var _p38 = _p37;
	var _p40 = _p38._0.year;
	var _p39 = _p38._0.month;
	var y = (_elm_lang$core$Native_Utils.cmp(_p39, 3) < 0) ? (_p40 - 1) : _p40;
	var m = _elm_lang$core$Native_Utils.eq(_p39, 1) ? 0 : (_elm_lang$core$Native_Utils.eq(_p39, 2) ? 3 : (_elm_lang$core$Native_Utils.eq(_p39, 3) ? 2 : (_elm_lang$core$Native_Utils.eq(_p39, 4) ? 5 : (_elm_lang$core$Native_Utils.eq(_p39, 5) ? 0 : (_elm_lang$core$Native_Utils.eq(_p39, 6) ? 3 : (_elm_lang$core$Native_Utils.eq(_p39, 7) ? 5 : (_elm_lang$core$Native_Utils.eq(_p39, 8) ? 1 : (_elm_lang$core$Native_Utils.eq(_p39, 9) ? 4 : (_elm_lang$core$Native_Utils.eq(_p39, 10) ? 6 : (_elm_lang$core$Native_Utils.eq(_p39, 11) ? 2 : 4))))))))));
	var d = A2(_elm_lang$core$Basics_ops['%'], ((((y + ((y / 4) | 0)) - ((y / 100) | 0)) + ((y / 400) | 0)) + m) + _p38._0.day, 7);
	return _elm_lang$core$Native_Utils.eq(d, 0) ? _Bogdanp$elm_time$Time_Date$Sun : (_elm_lang$core$Native_Utils.eq(d, 1) ? _Bogdanp$elm_time$Time_Date$Mon : (_elm_lang$core$Native_Utils.eq(d, 2) ? _Bogdanp$elm_time$Time_Date$Tue : (_elm_lang$core$Native_Utils.eq(d, 3) ? _Bogdanp$elm_time$Time_Date$Wed : (_elm_lang$core$Native_Utils.eq(d, 4) ? _Bogdanp$elm_time$Time_Date$Thu : (_elm_lang$core$Native_Utils.eq(d, 5) ? _Bogdanp$elm_time$Time_Date$Fri : _Bogdanp$elm_time$Time_Date$Sat)))));
};
