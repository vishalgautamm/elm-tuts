var _user$project$Main$initialModel = 0;
var _user$project$Main$increment = _elm_lang$core$Native_Platform.incomingPort(
	'increment',
	_elm_lang$core$Json_Decode$succeed(
		{}));
var _user$project$Main$outbound = _elm_lang$core$Native_Platform.outgoingPort(
	'outbound',
	function (v) {
		return v;
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'Increment') {
			return {ctor: '_Tuple2', _0: model + 1, _1: _elm_lang$core$Platform_Cmd$none};
		} else {
			return {
				ctor: '_Tuple2',
				_0: model,
				_1: _user$project$Main$outbound(model)
			};
		}
	});
var _user$project$Main$Send = {ctor: 'Send'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						_elm_lang$core$Basics$toString(model)),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Send),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Send'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$Increment = {ctor: 'Increment'};
var _user$project$Main$mapIncrement = function (_p1) {
	return _user$project$Main$Increment;
};
var _user$project$Main$subscriptions = function (model) {
	return _user$project$Main$increment(_user$project$Main$mapIncrement);
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _elm_lang$core$Platform_Cmd$none},
		update: _user$project$Main$update,
		view: _user$project$Main$view,
		subscriptions: _user$project$Main$subscriptions
	})();
