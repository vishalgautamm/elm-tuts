var _user$project$Main$initialModel = {count: 0, increase: 0, decrease: 0};
var _user$project$Main$jsMsgs = _elm_lang$core$Native_Platform.incomingPort('jsMsgs', _elm_lang$core$Json_Decode$int);
var _user$project$Main$increment = _elm_lang$core$Native_Platform.outgoingPort(
	'increment',
	function (v) {
		return null;
	});
var _user$project$Main$decrement = _elm_lang$core$Native_Platform.outgoingPort(
	'decrement',
	function (v) {
		return null;
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Increment':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{count: model.count + 1, increase: model.increase + 1}),
					_1: _user$project$Main$increment(
						{ctor: '_Tuple0'})
				};
			case 'Decrement':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{count: model.count - 1, decrease: model.decrease + 1}),
					_1: _user$project$Main$decrement(
						{ctor: '_Tuple0'})
				};
			case 'Reset':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{count: 0, increase: 0, decrease: 0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {count: a, increase: b, decrease: c};
	});
var _user$project$Main$NoOp = {ctor: 'NoOp'};
var _user$project$Main$Reset = {ctor: 'Reset'};
var _user$project$Main$Decrement = {ctor: 'Decrement'};
var _user$project$Main$Increment = {ctor: 'Increment'};
var _user$project$Main$mapJsMsg = function ($int) {
	var _p1 = $int;
	if (_p1 === 1) {
		return _user$project$Main$Increment;
	} else {
		return _user$project$Main$NoOp;
	}
};
var _user$project$Main$subscriptions = function (model) {
	return _user$project$Main$jsMsgs(_user$project$Main$mapJsMsg);
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Increment),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('+'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(model.count)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Decrement),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('-'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$h3,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									A2(
										_elm_lang$core$Basics_ops['++'],
										'+ clicked ',
										A2(
											_elm_lang$core$Basics_ops['++'],
											_elm_lang$core$Basics$toString(model.increase),
											' times'))),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$h3,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(
										A2(
											_elm_lang$core$Basics_ops['++'],
											'-clicked ',
											A2(
												_elm_lang$core$Basics_ops['++'],
												_elm_lang$core$Basics$toString(model.decrease),
												' times'))),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Reset),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Reset'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _elm_lang$core$Platform_Cmd$none},
		update: _user$project$Main$update,
		view: _user$project$Main$view,
		subscriptions: _user$project$Main$subscriptions
	})();
